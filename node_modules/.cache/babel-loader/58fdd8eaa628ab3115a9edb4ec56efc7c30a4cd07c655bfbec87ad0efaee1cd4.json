{"ast":null,"code":"var _jsxFileName = \"/Users/raghavvherugu/Desktop/Projects/name/Jila/src/StoreBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from \"react-modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StoreBox = ({\n  store\n}) => {\n  _s();\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [detailsModalOpen, setDetailsModalOpen] = useState(false);\n  const handleEditModalOpen = () => {\n    setEditModalOpen(true);\n  };\n  const handleDetailsModalOpen = () => {\n    setDetailsModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"store-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: store.bname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEditModalOpen,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDetailsModalOpen,\n        children: \"More Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: editModalOpen,\n      onClose: () => setEditModalOpen(false),\n      style: {\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"50%\",\n          // Adjust the width as per your requirement\n          maxHeight: \"70%\",\n          // Adjust the maximum height as per your requirement\n          overflowY: \"auto\",\n          // Add vertical scrollbar if content exceeds maxHeight\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          textAlign: \"center\"\n        },\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\" // Adjust the overlay background color\n        }\n      },\n\n      onRequestClose: () => setEditModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: detailsModalOpen,\n      onClose: () => setDetailsModalOpen(false),\n      style: {\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"50%\",\n          // Adjust the width as per your requirement\n          maxHeight: \"70%\",\n          // Adjust the maximum height as per your requirement\n          overflowY: \"auto\",\n          // Add vertical scrollbar if content exceeds maxHeight\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          textAlign: \"center\"\n        },\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\" // Adjust the overlay background color\n        }\n      },\n\n      onRequestClose: () => setEditModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(StoreBox, \"MM5sB2vRaC4IuvZjYk89Grm+FH8=\");\n_c = StoreBox;\nexport default StoreBox;\nvar _c;\n$RefreshReg$(_c, \"StoreBox\");","map":{"version":3,"names":["React","useState","Modal","jsxDEV","_jsxDEV","StoreBox","store","_s","editModalOpen","setEditModalOpen","detailsModalOpen","setDetailsModalOpen","handleEditModalOpen","handleDetailsModalOpen","className","children","bname","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","style","content","top","left","right","bottom","marginRight","transform","width","maxHeight","overflowY","display","justifyContent","alignItems","textAlign","overlay","backgroundColor","onRequestClose","_c","$RefreshReg$"],"sources":["/Users/raghavvherugu/Desktop/Projects/name/Jila/src/StoreBox.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from \"react-modal\";\n\nconst StoreBox = ({ store }) => {\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [detailsModalOpen, setDetailsModalOpen] = useState(false);\n\n  const handleEditModalOpen = () => {\n    setEditModalOpen(true);\n  };\n\n  const handleDetailsModalOpen = () => {\n    setDetailsModalOpen(true);\n  };\n\n  return (\n    <div className=\"store-box\">\n      <h2>{store.bname}</h2>\n      <div className=\"btn-container\">\n        <button onClick={handleEditModalOpen}>Edit</button>\n        <button onClick={handleDetailsModalOpen}>More Details</button>\n      </div>\n      <Modal isOpen={editModalOpen} onClose={() => setEditModalOpen(false)}\n      style={{\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"50%\", // Adjust the width as per your requirement\n          maxHeight: \"70%\", // Adjust the maximum height as per your requirement\n          overflowY: \"auto\", // Add vertical scrollbar if content exceeds maxHeight\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n        },\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Adjust the overlay background color\n        },\n      }}\n      onRequestClose={() => setEditModalOpen(false)}\n      >\n        {/* Edit modal content */}\n        {/* Include input fields for business name, rebate percentage, and address */}\n      </Modal>\n      <Modal isOpen={detailsModalOpen} onClose={() => setDetailsModalOpen(false)}\n      style={{\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"50%\", // Adjust the width as per your requirement\n          maxHeight: \"70%\", // Adjust the maximum height as per your requirement\n          overflowY: \"auto\", // Add vertical scrollbar if content exceeds maxHeight\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          textAlign: \"center\",\n        },\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Adjust the overlay background color\n        },\n      }}\n      onRequestClose={() => setEditModalOpen(false)}\n      >\n        {/* Details modal content */}\n        {/* Display data such as business name, address, rebate percentage, date created, number of complaints */}\n      </Modal>\n    </div>\n  );\n};\n\nexport default StoreBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}