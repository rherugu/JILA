"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDashboardUserEmail = void 0;
const _endpoint_1 = require("./_endpoint");
const httpClient_1 = require("./httpClient");
const getDashboardUserEmail = () => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const resp = yield (0, _endpoint_1.getHostEndpoint)().call.stripeApiFetch('/v1/user/email', {
            headers: {
                [httpClient_1.AUTHORIZATION_HEADER]: httpClient_1.AUTHORIZATION_VALUE,
            },
        });
        if (resp.ok) {
            resp.email = resp.json.email;
            return resp;
        }
        return Promise.reject(resp);
    }
    catch (e) {
        console.error('Error getting dashboard user email', e);
        throw e;
    }
});
exports.getDashboardUserEmail = getDashboardUserEmail;
//# sourceMappingURL=getDashboardUserEmail.js.map