import { BarChartProps } from "./internal/interface";
export declare const BarChart: "BarChart" & {
    readonly type?: "BarChart" | undefined;
    readonly props?: BarChartProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BarChart", BarChartProps, true>>;
import { LineChartProps } from "./internal/interface";
export declare const LineChart: "LineChart" & {
    readonly type?: "LineChart" | undefined;
    readonly props?: LineChartProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"LineChart", LineChartProps, true>>;
import { SparklineProps } from "./internal/interface";
export declare const Sparkline: "Sparkline" & {
    readonly type?: "Sparkline" | undefined;
    readonly props?: SparklineProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Sparkline", SparklineProps, true>>;
import { ContextViewProps } from "./internal/interface";
export declare const ContextView: "ContextView" & {
    readonly type?: "ContextView" | undefined;
    readonly props?: ContextViewProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"ContextView", ContextViewProps, true>>;
import { FocusViewProps } from "./internal/interface";
export declare const FocusView: "FocusView" & {
    readonly type?: "FocusView" | undefined;
    readonly props?: FocusViewProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"FocusView", FocusViewProps, true>>;
import { ImgProps } from "./internal/interface";
export declare const Img: "Img" & {
    readonly type?: "Img" | undefined;
    readonly props?: ImgProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Img", ImgProps, true>>;
import { LinkProps } from "./internal/interface";
export declare const Link: "Link" & {
    readonly type?: "Link" | undefined;
    readonly props?: LinkProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Link", LinkProps, true>>;
import { SettingsViewProps } from "./internal/interface";
export declare const SettingsView: "SettingsView" & {
    readonly type?: "SettingsView" | undefined;
    readonly props?: SettingsViewProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"SettingsView", SettingsViewProps, true>>;
import { StripeFileUploaderProps } from "./internal/interface";
export declare const StripeFileUploader: "StripeFileUploader" & {
    readonly type?: "StripeFileUploader" | undefined;
    readonly props?: StripeFileUploaderProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"StripeFileUploader", StripeFileUploaderProps, true>>;
import { SignInViewProps } from "./internal/interface";
export declare const SignInView: "SignInView" & {
    readonly type?: "SignInView" | undefined;
    readonly props?: SignInViewProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"SignInView", SignInViewProps, true>>;
import { TabProps } from "./internal/interface";
export declare const Tab: "Tab" & {
    readonly type?: "Tab" | undefined;
    readonly props?: TabProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Tab", TabProps, true>>;
import { TabPanelProps } from "./internal/interface";
export declare const TabPanel: "TabPanel" & {
    readonly type?: "TabPanel" | undefined;
    readonly props?: TabPanelProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TabPanel", TabPanelProps, true>>;
