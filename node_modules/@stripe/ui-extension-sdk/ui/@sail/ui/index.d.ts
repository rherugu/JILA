import { AccordionProps } from "./internal/interface";
export declare const Accordion: "Accordion" & {
    readonly type?: "Accordion" | undefined;
    readonly props?: AccordionProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Accordion", AccordionProps, true>>;
import { AccordionItemProps } from "./internal/interface";
export declare const AccordionItem: "AccordionItem" & {
    readonly type?: "AccordionItem" | undefined;
    readonly props?: AccordionItemProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"AccordionItem", AccordionItemProps, true>>;
import { BadgeProps } from "./internal/interface";
export declare const Badge: "Badge" & {
    readonly type?: "Badge" | undefined;
    readonly props?: BadgeProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Badge", BadgeProps, true>>;
import { BannerProps } from "./internal/interface";
export declare const Banner: "Banner" & {
    readonly type?: "Banner" | undefined;
    readonly props?: BannerProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Banner", BannerProps, true>>;
import { BasicTableProps } from "./internal/interface";
export declare const BasicTable: "BasicTable" & {
    readonly type?: "BasicTable" | undefined;
    readonly props?: BasicTableProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTable", BasicTableProps, true>>;
import { BasicTableHeaderProps } from "./internal/interface";
export declare const BasicTableHeader: "BasicTableHeader" & {
    readonly type?: "BasicTableHeader" | undefined;
    readonly props?: BasicTableHeaderProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTableHeader", BasicTableHeaderProps, true>>;
import { BasicTableBodyProps } from "./internal/interface";
export declare const BasicTableBody: "BasicTableBody" & {
    readonly type?: "BasicTableBody" | undefined;
    readonly props?: BasicTableBodyProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTableBody", BasicTableBodyProps, true>>;
import { BasicTableRowProps } from "./internal/interface";
export declare const BasicTableRow: "BasicTableRow" & {
    readonly type?: "BasicTableRow" | undefined;
    readonly props?: BasicTableRowProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTableRow", BasicTableRowProps, true>>;
import { BasicTableFooterProps } from "./internal/interface";
export declare const BasicTableFooter: "BasicTableFooter" & {
    readonly type?: "BasicTableFooter" | undefined;
    readonly props?: BasicTableFooterProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTableFooter", BasicTableFooterProps, true>>;
import { BasicTableCellProps } from "./internal/interface";
export declare const BasicTableCell: "BasicTableCell" & {
    readonly type?: "BasicTableCell" | undefined;
    readonly props?: BasicTableCellProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTableCell", BasicTableCellProps, true>>;
import { BasicTableHeaderCellProps } from "./internal/interface";
export declare const BasicTableHeaderCell: "BasicTableHeaderCell" & {
    readonly type?: "BasicTableHeaderCell" | undefined;
    readonly props?: BasicTableHeaderCellProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"BasicTableHeaderCell", BasicTableHeaderCellProps, true>>;
import { ButtonProps } from "./internal/interface";
export declare const Button: "Button" & {
    readonly type?: "Button" | undefined;
    readonly props?: ButtonProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Button", ButtonProps, true>>;
import { ButtonGroupProps } from "./internal/interface";
export declare const ButtonGroup: "ButtonGroup" & {
    readonly type?: "ButtonGroup" | undefined;
    readonly props?: ButtonGroupProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"ButtonGroup", ButtonGroupProps, true>>;
import { CheckboxProps } from "./internal/interface";
export declare const Checkbox: "Checkbox" & {
    readonly type?: "Checkbox" | undefined;
    readonly props?: CheckboxProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Checkbox", CheckboxProps, true>>;
import { ChipProps } from "./internal/interface";
export declare const Chip: "Chip" & {
    readonly type?: "Chip" | undefined;
    readonly props?: ChipProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Chip", ChipProps, true>>;
import { ChipListProps } from "./internal/interface";
export declare const ChipList: "ChipList" & {
    readonly type?: "ChipList" | undefined;
    readonly props?: ChipListProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"ChipList", ChipListProps, true>>;
import { DividerProps } from "./internal/interface";
export declare const Divider: "Divider" & {
    readonly type?: "Divider" | undefined;
    readonly props?: DividerProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Divider", DividerProps, true>>;
import { FormFieldGroupProps } from "./internal/interface";
export declare const FormFieldGroup: "FormFieldGroup" & {
    readonly type?: "FormFieldGroup" | undefined;
    readonly props?: FormFieldGroupProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"FormFieldGroup", FormFieldGroupProps, true>>;
import { IconProps } from "./internal/interface";
export declare const Icon: "Icon" & {
    readonly type?: "Icon" | undefined;
    readonly props?: IconProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Icon", IconProps, true>>;
import { LinkProps } from "./internal/interface";
export declare const Link: "Link" & {
    readonly type?: "Link" | undefined;
    readonly props?: LinkProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Link", LinkProps, true>>;
import { MenuItemProps } from "./internal/interface";
export declare const MenuItem: "MenuItem" & {
    readonly type?: "MenuItem" | undefined;
    readonly props?: MenuItemProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"MenuItem", MenuItemProps, true>>;
import { MenuGroupProps } from "./internal/interface";
export declare const MenuGroup: "MenuGroup" & {
    readonly type?: "MenuGroup" | undefined;
    readonly props?: MenuGroupProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"MenuGroup", MenuGroupProps, true>>;
import { MenuProps } from "./internal/interface";
export declare const Menu: "Menu" & {
    readonly type?: "Menu" | undefined;
    readonly props?: MenuProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Menu", MenuProps, true>>;
import { NoticeProps } from "./internal/interface";
export declare const Notice: "Notice" & {
    readonly type?: "Notice" | undefined;
    readonly props?: NoticeProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Notice", NoticeProps, true>>;
import { RadioProps } from "./internal/interface";
export declare const Radio: "Radio" & {
    readonly type?: "Radio" | undefined;
    readonly props?: RadioProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Radio", RadioProps, true>>;
import { SelectProps } from "./internal/interface";
export declare const Select: "Select" & {
    readonly type?: "Select" | undefined;
    readonly props?: SelectProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Select", SelectProps, true>>;
import { SpinnerProps } from "./internal/interface";
export declare const Spinner: "Spinner" & {
    readonly type?: "Spinner" | undefined;
    readonly props?: SpinnerProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Spinner", SpinnerProps, true>>;
import { SwitchProps } from "./internal/interface";
export declare const Switch: "Switch" & {
    readonly type?: "Switch" | undefined;
    readonly props?: SwitchProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Switch", SwitchProps, true>>;
import { TabProps } from "./internal/interface";
export declare const Tab: "Tab" & {
    readonly type?: "Tab" | undefined;
    readonly props?: TabProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Tab", TabProps, true>>;
import { TabPanelProps } from "./internal/interface";
export declare const TabPanel: "TabPanel" & {
    readonly type?: "TabPanel" | undefined;
    readonly props?: TabPanelProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TabPanel", TabPanelProps, true>>;
import { TabsProps } from "./internal/interface";
export declare const Tabs: "Tabs" & {
    readonly type?: "Tabs" | undefined;
    readonly props?: TabsProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Tabs", TabsProps, true>>;
import { TabListProps } from "./internal/interface";
export declare const TabList: "TabList" & {
    readonly type?: "TabList" | undefined;
    readonly props?: TabListProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TabList", TabListProps, true>>;
import { TabPanelsProps } from "./internal/interface";
export declare const TabPanels: "TabPanels" & {
    readonly type?: "TabPanels" | undefined;
    readonly props?: TabPanelsProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TabPanels", TabPanelsProps, true>>;
import { TextAreaProps } from "./internal/interface";
export declare const TextArea: "TextArea" & {
    readonly type?: "TextArea" | undefined;
    readonly props?: TextAreaProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TextArea", TextAreaProps, true>>;
import { TextFieldProps } from "./internal/interface";
export declare const TextField: "TextField" & {
    readonly type?: "TextField" | undefined;
    readonly props?: TextFieldProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TextField", TextFieldProps, true>>;
import { TooltipProps } from "./internal/interface";
export declare const Tooltip: "Tooltip" & {
    readonly type?: "Tooltip" | undefined;
    readonly props?: TooltipProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"Tooltip", TooltipProps, true>>;
import { ListItemProps } from "./internal/interface";
export declare const ListItem: "ListItem" & {
    readonly type?: "ListItem" | undefined;
    readonly props?: ListItemProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"ListItem", ListItemProps, true>>;
import { ListProps } from "./internal/interface";
export declare const List: "List" & {
    readonly type?: "List" | undefined;
    readonly props?: ListProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"List", ListProps, true>>;
import { TailorDateFieldProps } from "./internal/interface";
export declare const TailorDateField: "TailorDateField" & {
    readonly type?: "TailorDateField" | undefined;
    readonly props?: TailorDateFieldProps | undefined;
    readonly children?: true | undefined;
} & import("@remote-ui/react").ReactComponentTypeFromRemoteComponentType<import("@remote-ui/core").RemoteComponentType<"TailorDateField", TailorDateFieldProps, true>>;
