import type { ExtensionContextValue } from '../context';
export declare const defaultMockContextProps: ExtensionContextValue;
declare type DeepPartial<T> = T extends Record<string, unknown> ? {
    [P in keyof T]?: DeepPartial<T[P]>;
} : T;
declare type PartialMockContext = DeepPartial<Omit<ExtensionContextValue, 'environment'>> & {
    environment: DeepPartial<Omit<ExtensionContextValue['environment'], 'constants'>> & {
        constants?: ExtensionContextValue['environment']['constants'];
    };
};
export declare const getMockContextProps: (partialMockContext?: PartialMockContext) => ExtensionContextValue;
export {};
