"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const _1 = require(".");
const ui_1 = require("../ui");
describe('find, findAll, findWhere, findAllWhere', () => {
    it('should find the TextField', () => {
        const { wrapper } = (0, _1.render)((0, jsx_runtime_1.jsx)(ui_1.TextField, { label: "Name" }));
        expect(wrapper.find(ui_1.TextField)).toBeTruthy();
        expect(wrapper.findAll(ui_1.TextField)[0]).toBeTruthy();
        expect(wrapper.findWhere((node) => node.is(ui_1.TextField))).toBeTruthy();
        expect(wrapper.findAllWhere((node) => node.is(ui_1.TextField))[0]).toBeTruthy();
    });
});
describe('debug', () => {
    it('omits className, aria-*, and data-* properties by default', () => {
        const { wrapper } = (0, _1.render)((0, jsx_runtime_1.jsx)(ui_1.Button, Object.assign({ className: "button", "data-testid": "button", "aria-label": "A clickable button" }, { children: "Click Me!" })));
        const debugOutput = wrapper.debug();
        expect(debugOutput).not.toContain('className="button"');
        expect(debugOutput).not.toContain('data-testid="button"');
        expect(debugOutput).not.toContain('aria-label="A clickable button"');
    });
    it('prints all properties when options.all is true', () => {
        const { wrapper } = (0, _1.render)((0, jsx_runtime_1.jsx)(ui_1.Button, Object.assign({ className: "button", "data-testid": "button", "aria-label": "A clickable button" }, { children: "Click Me!" })));
        const debugOutput = wrapper.debug({ all: true });
        expect(debugOutput).toContain('className="button"');
        expect(debugOutput).toContain('data-testid="button"');
        expect(debugOutput).toContain('aria-label="A clickable button"');
    });
});
//# sourceMappingURL=index.test.js.map